// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tasks {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(100)
  description String
  dueDate     DateTime
  priority    TaskPriority
  status      TaskStatus @default(TODO)
  isDelete    Boolean    @default(false)

  // Mối quan hệ một task có thể phụ thuộc vào nhiều task khác
  dependencies   TaskDependency[] @relation("TaskDependencies")
  dependents     TaskDependency[] @relation("TaskDependents")

  @@index([dueDate])
  @@index([status])
  @@index([priority])
}

model TaskDependency {
  taskId         Int
  dependOnTaskId Int

  @@unique([taskId, dependOnTaskId])

  // Liên kết đến bảng Tasks (task phụ thuộc vào task khác)
  Task         Tasks @relation("TaskDependencies", fields: [taskId], references: [id], onDelete: Cascade)
  DependOnTask Tasks @relation("TaskDependents", fields: [dependOnTaskId], references: [id], onDelete: Cascade)
}


enum TaskStatus{
  TODO
  INPROGRESS
  INPREVIEW
  CANCEL
  COMPLETE

  @@map("TaskStatus")
}

enum TaskPriority{
  LOW
  MEDIUM
  HIGH
  @@map("TaskPriority")
}